#include <bits/stdc++.h>
using namespace std;
int main() {
    // давайте временно учитывать степени двойки со знаком плюс,
    // а потом вычтем их дважды, то есть:
    // -1 - 2 + 3 - 4 + 5 + 6 + 7 - 8 + 9 = (1+2+3+...+9) - 2 * (1+2+4+8)
    // тогда нужно из суммы арифметической прогрессии вычесть
    // сумму геометрической прогрессии
    int nTests; cin >> nTests;
    while (nTests --> 0) {
        int64_t n; cin >> n;
        int64_t ar = n * (n+1) / 2;
        int64_t maxPower = __lg(n); // целочисленный двоичный логарифм
        int64_t geom = 2 * ((1LL << (maxPower + 1)) - 1);
        cout << ar - geom << '\n';
        // используем, что знаметель прогрессии - степень двойки
        // тогда её сумма равна степень двойки - 1:
        // 1 + 2 + 4 + 8 = 16 - 1
        // степень двойки находим при помощи битового сдвига влево
        // логарифм считаем целочисленный при помощи __lg (или ilogb)
        // помним о переполнении, используем 1 в типе long long, т.е. 1LL
    }
}